    return table;
  }

  function createDataSetSection(ds, index){
    const section = document.createElement('div');
    section.className = 'section';
    section.id = 'section-' + index;

    const title = document.createElement('h3');
    title.textContent = ds.name;
    section.appendChild(title);

    // Buttons
    const row = document.createElement('div'); row.className = 'row';
    const copyBtn = document.createElement('button'); copyBtn.className='btn primary'; copyBtn.textContent='Copy Script';
    const downloadBtn = document.createElement('button'); downloadBtn.className='btn'; downloadBtn.textContent='Download .ccl';
    const loadClipboardBtn = document.createElement('button'); loadClipboardBtn.className='btn'; loadClipboardBtn.textContent='Load from Clipboard';
    const pasteToggleBtn = document.createElement('button'); pasteToggleBtn.className='btn'; pasteToggleBtn.textContent='Paste Manually';
    row.append(copyBtn, downloadBtn, loadClipboardBtn, pasteToggleBtn);
    section.appendChild(row);

    // Keep refs for step highlighting
    ds.__copyBtn = copyBtn; ds.__loadBtn = loadClipboardBtn; ds.__pasteToggle = pasteToggleBtn;

    // Manual paste area
    const pasteArea = document.createElement('div'); pasteArea.className='hidden'; pasteArea.style.marginTop='8px';
    const ta = document.createElement('textarea'); ta.placeholder='Paste the tab‑delimited output here, including header row...';
    const loadManual = document.createElement('button'); loadManual.className='btn'; loadManual.textContent='Load Pasted Data';
    const row2 = document.createElement('div'); row2.className='row'; row2.append(loadManual);
    pasteArea.append(ta, row2); section.appendChild(pasteArea);

    // Status + preview
    const status = document.createElement('div'); status.className='small muted'; status.textContent='No data loaded.'; section.appendChild(status);
    const viewport = document.createElement('div'); viewport.className='viewport'; const preview = document.createElement('div'); preview.id='preview-'+index; viewport.appendChild(preview); section.appendChild(viewport);

    // Wire up
    const scriptText = getEmbeddedScriptText(ds.scriptId);

    copyBtn.onclick = async()=>{
      try{
        if(navigator.clipboard && navigator.clipboard.writeText){ await navigator.clipboard.writeText(scriptText); }
        else{ const tmp=document.createElement('textarea'); tmp.value=scriptText; document.body.appendChild(tmp); tmp.select(); document.execCommand('copy'); tmp.remove(); }
        // Visible feedback on the button
        const originalText = copyBtn.textContent;
        copyBtn.textContent = 'Copied!';
        copyBtn.disabled = true;
        setTimeout(()=>{ copyBtn.textContent = originalText; copyBtn.disabled = false; }, 1200);
        // Step advance
        currentDataSet = index; attn(copyBtn,false); attn(loadClipboardBtn,true); setStep(2);
        log(ds.name + ': Extract script copied.');
      }catch(e){ log(ds.name + ': Copy failed. Copy from the Embedded Scripts section.'); }
    };

    downloadBtn.onclick = ()=>{
      const blob = new Blob([scriptText], {type:'text/plain'});
      const a = document.createElement('a'); a.href = URL.createObjectURL(blob); a.download = ds.name.toLowerCase().replace(/\s+/g,'_') + '.ccl'; a.click();
    };

    pasteToggleBtn.onclick = ()=> pasteArea.classList.toggle('hidden');

    function handleLoad(text){
      const parsed = parseData(text);
      if(!parsed.length){ status.textContent='No valid data found.'; return }
      ds.data = parsed;
      status.textContent = parsed.length + ' row(s) loaded.';
      preview.innerHTML='';
      preview.appendChild(createTable(parsed.slice(0, 400)));
      processBtn.disabled = false;
      // Step advance to processing
      attn(loadClipboardBtn,false); attn(processBtn,true); setStep(3);
      log(ds.name + ': Data loaded.');
    }

    loadClipboardBtn.onclick = async()=>{
      try{ const text = await navigator.clipboard.readText(); handleLoad(text); }
      catch(e){ status.textContent='Clipboard read blocked by browser. Use Paste Manually.'; }
    };

    loadManual.onclick = ()=> handleLoad(ta.value);

    return section;
  }

  // Render all data set sections
  dataSetsConfig.forEach((ds, i)=> container.appendChild(createDataSetSection(ds, i)));

  // Initial highlight: encourage copying a script (first data set)
  if(dataSetsConfig.length){ attn(dataSetsConfig[0].__copyBtn, true); }

  // Show all embedded scripts together for quick inspection
  (function renderAllScripts(){
    dataSetsConfig.forEach((ds, i)=>{
      const box = document.createElement('div'); box.className='section';
      const h = document.createElement('h3'); h.textContent = ds.name; box.appendChild(h);
      const pre = document.createElement('pre'); const code = document.createElement('code'); code.textContent = getEmbeddedScriptText(ds.scriptId); pre.appendChild(code);
      box.appendChild(pre);
      allScripts.appendChild(box);
    });
  })();

  // Process all loaded data: simple echo tables for now
  processBtn.onclick = ()=>{
    processedOutput.innerHTML='';
    let any=false;
    dataSetsConfig.forEach(ds=>{
      if(ds.data && ds.data.length){
        any=true;
        const h=document.createElement('h3'); h.textContent = ds.name + ' • Processed Data'; processedOutput.appendChild(h);
        processedOutput.appendChild(createTable(ds.data));
      }
    });
    if(!any){ processedOutput.innerHTML='<div class="small muted">No data loaded yet.</div>'; }
    log('Processed current data sets.');
    attn(processBtn,false);
  };

  document.getElementById('clearAll').onclick = ()=>{
    dataSetsConfig.forEach(ds=> ds.data=null);
    processedOutput.innerHTML='';
    document.querySelectorAll('[id^="preview-"]').forEach(el=> el.innerHTML='');
    document.querySelectorAll('.section .small.muted').forEach((el,i)=>{ if(i%2===0) el.textContent='No data loaded.'; }); // crude but fine
    processBtn.disabled=true;
    setLog('Cleared.');
    setStep(1);
    dataSetsConfig.forEach(ds=> attn(ds.__loadBtn,false));
    attn(processBtn,false);
    if(dataSetsConfig.length){ attn(dataSetsConfig[0].__copyBtn,true); }
  };
  </script>
</body>
</html>
